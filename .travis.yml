---
env:
  global:
    - winrm_user: winrm_test_user
    - winrm_password: WinRM_test_Pass@w0rd1
    - user_cert: c:\Users\travis\build\juju4\ansible-harden-windows\user.pem
    - user_key: c:\Users\travis\build\juju4\ansible-harden-windows\key.pem
    - user_pfx: c:\Users\travis\build\juju4\ansible-harden-windows\user.pfx

matrix:
  include:

    - os: linux
      language: python
      python: "2.7"
      before_install:
        - ln -s ansible-harden-windows ../juju4.harden-windows
      install:
        - sudo apt-get install libxml2-utils
        - pip install ansible ansible-lint
        - ansible --version
        - "{ echo '[defaults]'; echo 'roles_path = ../'; } >> ansible.cfg"
        - "echo \"[test-kitchen]\nlocalhost\" > inventory"
        - "[ -f get-dependencies.sh ] && sh -x get-dependencies.sh"
      script:
        - "ansible-lint tasks/main.yml"
        # Check the role/playbook's syntax.
        - "ansible-playbook -i inventory --syntax-check test/integration/default/default.yml"

    - image: Windows Server 2019
      before_install:
        - wslconfig /list
        - wslconfig /setdefault ubuntu-18.04
        - wsl lsb_release -a
        - wsl pwd
        # setup winrm
        - ps: net user /Y /add $winrm_user $winrm_password
        - ps: net localgroup administrators $winrm_user /add
        - set
        - ps: Test-WSMan -Authentication default
        - ps: Get-PSSessionConfiguration
        - ps: Get-Item WSMan:\localhost\Client\TrustedHosts
        - ps: Get-ChildItem WSMan:\localhost\Client\DefaultPorts
        - ps: Get-ChildItem WSMan:\localhost\Listener
        - ps: Get-Service -Name winrm | Select Status
#        - winrm set winrm/config/client/auth '@{Basic="true"}'
#        - winrm set winrm/config/service/auth '@{Basic="true"}'
#        - winrm set winrm/config/service/auth '@{Certificate="true"}'
#        - winrm set winrm/config/service/auth '@{CbtHardeningLevel="Strict"}'
#        - winrm set winrm/config/service '@{AllowUnencrypted="true"}'
        - ps: Write-Host $env:PATH
        - ps: ($pwd).path

      install:
        # setup environment
        - wsl sudo apt-get update
        - wsl sudo env DEBIAN_FRONTEND=noninteractive apt-get install -y python3 sudo python3-pip python3-dev libffi-dev python3-apt aptitude libssl-dev
        # setup ansible
        - wsl uname -a
        - wsl sudo pip3 install --upgrade pip
        - wsl sudo pip3 install pywinrm
        - wsl sudo pip3 install ansible==$ANSIBLE_VERSION
        - wsl ansible --version
        - echo "localhost ansible_user=$winrm_user ansible_password=$winrm_password ansible_connection=winrm ansible_port=5985" > test/travis/inventory
        - cat test/travis/inventory
        - wsl ls /
        - wsl ansible -i $TRAVIS_BUILD_DIR/test/travis/inventory -m win_ping -vvv localhost
        - wsl mkdir -p /etc/ansible/roles
        - wsl cp $TRAVIS_BUILD_DIR/test/appveyor/ansible.cfg /etc/ansible
        - wsl cp -R $TRAVIS_BUILD_DIR /etc/ansible/roles/juju4.harden-windows
        - wsl sh -x $TRAVIS_BUILD_DIR/get-dependencies.sh

      script:
        - wsl ansible-playbook $TRAVIS_BUILD_DIR/test/integration/$SUITE/default.yml --syntax-check
        - wsl ansible-playbook -i $TRAVIS_BUILD_DIR/test/travis/inventory $TRAVIS_BUILD_DIR/test/integration/$SUITE/default.yml -vvv $ANSIBLE_EXTRA_VARS

      after_failure:
        - ps: Get-WinEvent -LogName 'Microsoft-Windows-AppLocker/EXE and DLL' | Where { $_.ID -eq 8004 }
        - wsl ansible -i $TRAVIS_BUILD_DIR/test/travis/inventory -m setup -vvv localhost

      after_script:
        - ps: Get-ChildItem -Path "HKCU:\Software\Microsoft\Windows\CurrentVersion\Explorer\FileExts\.hta" -Recurse
        - ps: Get-ChildItem -Path "HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion\ProfileList"
        - c:\opscode\inspec\bin\inspec.bat exec https://github.com/juju4/windows-baseline/ || exit 0
