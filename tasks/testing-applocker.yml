---

- name: Testing | AppLocker via powershell Get-AppLockerPolicy
  win_shell: "Get-AppLockerPolicy -Effective | Test-AppLockerPolicy -Path {{ item }}"
  with_items: "{{ harden_win_testing_applocker_filepath | default([]) }}"
  register: testal_results
- debug: var=testal_results

- name: Check directories permissions for world-writeable paths
  win_shell: "C:\\ProgramData\\chocolatey\\lib\\sysinternals\\tools\\accesschk.exe -w Users \"{{ item }}\""
  with_items:
    - "C:\\Users"
    - "C:\\Program Files"
    - "C:\\Program Files (x86)"
    - "C:\\ProgramData"
    - "C:\\Windows"
    - "C:\\PerfLogs"
    - "C:\\opscode"
    - "C:\\tmp"
    - "{{ harden_win_temp_dir }}"
  register: wpath_results
  ignore_errors: true
- debug: var=wpath_results

- set_fact:
    ansible_become_password: "_Password_CI_CD_to_be_revoked1_"

- name: Remove user _test
  win_user:
    name: _test
    state: absent
## FIXME! failing on second pass, https://groups.google.com/forum/#!topic/ansible-project/_ydkYXZibrM
##  https://technet.microsoft.com/en-us/library/cc732593(v=ws.10).aspx
- name: Ensure user _test is present
  win_user:
    name: _test
    password: "{{ ansible_become_password }}"
    state: present
    groups:
      - Users

## https://github.com/3gstudent/Bypass-Windows-AppLocker
- name: upload test script
  win_template:
    src: AppLockerBypassChecker-v1.ps1
    dest: "{{ harden_win_temp_dir }}\\AppLockerBypassChecker-v1.ps1"

## FIXME! ProgramData dir is user writeable! opscode\inspec
- name: AppLockerBypassChecker-v1 for user?
  win_shell: "Powershell -Exec Bypass -File {{ harden_win_temp_dir }}\\AppLockerBypassChecker-v1.ps1 \"{{ item }}\""
  become: yes
  become_user: _test
  with_items:
    - "C:\\Users"
    - "C:\\Program Files"
    - "C:\\Program Files (x86)"
    - "C:\\ProgramData"
    - "C:\\Windows"
  register: bypass_results
- debug: var=bypass_results

#- name: Check log for blocked apps
#  win_shell: Get-WinEvent -LogName 'Microsoft-Windows-AppLocker/EXE and DLL' | Where { $_.ID -eq 8004 }
#  register: winevt
#- debug: var=winevt.stdout_lines
